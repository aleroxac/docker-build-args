FROM golang:1.23.0 AS base

ARG \
    API_PORT \
    IMAGE_MAINTAINER \
    IMAGE_VENDOR \
    AUTHOR_NAME \
    AUTHOR_USERNAME \
    AUTHOR_TITLE \
    AUTHOR_EMAIL \
    LICENSE \
    SCHEMA_VERSION \
    VCS_REF \
    VCS_URL \
    BUILD_DATE \
    IMAGE_NAME \
    IMAGE_BASE \
    IMAGE_VERSION \
    IMAGE_DESCRIPTION \
    IMAGE_USAGE \
    IMAGE_URL \
    OS_NAME \
    OS_VERSION \
    DOCKER_CMD \
    DOCKER_CMD_DEVEL \
    DOCKER_CMD_TEST \
    DOCKER_CMD_DEBUG \
    DOCKER_CMD_HELP \
    DOCKER_PARAMS

LABEL \
    IMAGE_MAINTAINER=${IMAGE_MAINTAINER} \
    IMAGE_VENDOR=${IMAGE_VENDOR} \
    AUTHOR_NAME=${AUTHOR_NAME} \
    AUTHOR_USERNAME=${AUTHOR_USERNAME} \
    AUTHOR_TITLE=${AUTHOR_TITLE} \
    AUTHOR_EMAIL=${AUTHOR_EMAIL} \
    LICENSE=${LICENSE} \
    SCHEMA_VERSION=${SCHEMA_VERSION} \
    VCS_REF=${VCS_REF} \
    VCS_URL=${VCS_URL} \
    BUILD_DATE=${BUILD_DATE} \
    IMAGE_NAME=${IMAGE_NAME} \
    IMAGE_BASE=${IMAGE_BASE} \
    IMAGE_VERSION=${IMAGE_VERSION} \
    IMAGE_DESCRIPTION=${IMAGE_DESCRIPTION} \
    IMAGE_USAGE=${IMAGE_USAGE} \
    IMAGE_URL=${IMAGE_URL} \
    OS_NAME=${OS_NAME} \
    OS_VERSION=${OS_VERSION} \
    DOCKER_CMD=${DOCKER_CMD} \
    DOCKER_CMD_DEVEL=${DOCKER_CMD_DEVEL} \
    DOCKER_CMD_TEST=${DOCKER_CMD_TEST} \
    DOCKER_CMD_DEBUG=${DOCKER_CMD_DEBUG} \
    DOCKER_CMD_HELP=${DOCKER_CMD_HELP} \
    DOCKER_PARAMS=${DOCKER_PARAMS}

ENV API_PORT=${API_PORT}

FROM base AS build
WORKDIR /build
COPY . .
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o server main.go

# FROM scratch
FROM base AS main
WORKDIR /app
COPY --from=build /build/server /app/
CMD ["/app/server"]
EXPOSE ${API_PORT}
